[{"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\reportWebVitals.js":"1","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\index.tsx":"2","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\App.tsx":"3","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Header.tsx":"4","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Spelers.tsx":"5","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\AddSpeler.tsx":"6","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler.tsx":"7","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\DelSpeler.tsx":"8","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\EditSpeler.tsx":"9"},{"size":362,"mtime":1637166856204,"results":"10","hashOfConfig":"11"},{"size":517,"mtime":1638456411193,"results":"12","hashOfConfig":"11"},{"size":1249,"mtime":1638740339946,"results":"13","hashOfConfig":"11"},{"size":1866,"mtime":1638718692550,"results":"14","hashOfConfig":"11"},{"size":2365,"mtime":1638736946648,"results":"15","hashOfConfig":"11"},{"size":10057,"mtime":1638737761672,"results":"16","hashOfConfig":"11"},{"size":3463,"mtime":1638725320205,"results":"17","hashOfConfig":"11"},{"size":3808,"mtime":1638722984343,"results":"18","hashOfConfig":"11"},{"size":9719,"mtime":1638724582217,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1e58cps",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"25"},"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\reportWebVitals.js",[],["43","44"],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\index.tsx",[],["45","46"],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\App.tsx",[],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Header.tsx",[],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Spelers.tsx",[],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\AddSpeler.tsx",[],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler.tsx",["47","48","49"],"import {Link, useParams} from \"react-router-dom\";\r\nimport React, {useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from 'moment';\r\nimport {Button, Container} from \"react-bootstrap\";\r\n\r\ninterface Speler {\r\n    id: number;\r\n    actief: boolean;\r\n    adresDTO: {\r\n        id: number;\r\n        gemeente: string;\r\n        straat: string;\r\n        huisnummer: string;\r\n        postcode:string;\r\n    }\r\n    geboortedatum: string;\r\n    userDTO: {\r\n        id: number;\r\n        achternaam: string;\r\n        email: string;\r\n        role: string;\r\n        username: string;\r\n        voornaam: string;\r\n    }\r\n}\r\n\r\n\r\nconst Speler = () => {\r\n    let params = useParams();\r\n\r\n    const getSpelerURL = \"http://localhost:8080/api/spelers/\" + params.id + \"/getOne\";\r\n\r\n    const [speler, setSpeler] = React.useState<Speler | any>(    {\r\n            id: 0,\r\n            actief: false,\r\n            adresDTO: {\r\n                id: 0,\r\n                gemeente:'',\r\n                straat:'',\r\n                huisnummer: '',\r\n                postcode:'',\r\n            },\r\n            geboortedatum: '',\r\n            userDTO: {\r\n                id: 0,\r\n                achternaam: '',\r\n                email: '',\r\n                role: '',\r\n                username: '',\r\n                voornaam: '',\r\n        }\r\n    });\r\n\r\n    // get spelers from api\r\n    React.useEffect(() => {\r\n        axios.get<Speler[]>(getSpelerURL, {\r\n            auth: {\r\n                username: 'manager',\r\n                password: 'manager'\r\n            }\r\n        }).then((response) =>{\r\n            console.log(response.data);\r\n            setSpeler(response.data);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n            <>\r\n                <Container className=\"col-8 bg-dark text-white-50\" >\r\n                    <div>\r\n                        <br/>\r\n                        <h1>Speler: {speler.userDTO.username} </h1>\r\n                        <br/>\r\n                        <h3>Voornaam: {speler.userDTO.voornaam} </h3>\r\n                        <h3>Achternaam: {speler.userDTO.achternaam}</h3>\r\n                        <h3>Email: {speler.userDTO.email}</h3>\r\n                        <h3>Geboortedatum: {moment(speler.geboortedatum).format('DD/MM/YYYY')}</h3>\r\n                        <h3>Actief: {speler.actief ? \"true\": \"false\"} </h3>\r\n                        <br/>\r\n\r\n                        <h3>Adres </h3>\r\n                        <h4>Gemeente: {speler.adresDTO.gemeente}</h4>\r\n                        <h4>Postcode: {speler.adresDTO.postcode}</h4>\r\n                        <h4>Straat: {speler.adresDTO.straat}</h4>\r\n                        <h4>Huisnr.: {speler.adresDTO.huisnummer}</h4>\r\n\r\n                        <br/>\r\n\r\n                        <Link to={\"/EditSpeler/\" + speler.id} >\r\n                            <Button>\r\n                                Speler aanpassen\r\n                            </Button>\r\n                        </Link>\r\n\r\n                        <Link to={\"/DelSpeler/\" + speler.id}>\r\n                            <Button>\r\n                                {speler.actief?\r\n                                    \"Speler deactiveren\"\r\n                                    :\r\n                                    \"Speler activeren\"\r\n                                }\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                </Container>\r\n            </>\r\n        )\r\n}\r\n\r\nexport default Speler","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\DelSpeler.tsx",["50"],"import {Link, useParams} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from 'moment';\r\nimport {Button, Container} from \"react-bootstrap\";\r\n\r\ninterface Speler {\r\n    id: number;\r\n    actief: boolean;\r\n    adresDTO: {\r\n        id: number;\r\n        gemeente: string;\r\n        straat: string;\r\n        huisnummer: string;\r\n        postcode:string;\r\n    }\r\n    geboortedatum: string;\r\n    userDTO: {\r\n        id: number;\r\n        achternaam: string;\r\n        email: string;\r\n        role: string;\r\n        username: string;\r\n        voornaam: string;\r\n    }\r\n}\r\n\r\n\r\nconst DelSpeler = () => {\r\n    let params = useParams();\r\n\r\n    const getSpelerURL = \"http://localhost:8080/api/spelers/\" + params.id + \"/getOne\";\r\n\r\n    const delSpelerURL = \"http://localhost:8080/api/spelers/\" + params.id + \"/delete\";\r\n\r\n    const [speler, setSpeler] = React.useState<Speler | any>(    {\r\n        id: 0,\r\n        actief: false,\r\n        adresDTO: {\r\n            id: 0,\r\n            gemeente:'',\r\n            straat:'',\r\n            huisnummer: '',\r\n            postcode:'',\r\n        },\r\n        geboortedatum: '',\r\n        userDTO: {\r\n            id: 0,\r\n            achternaam: '',\r\n            email: '',\r\n            role: '',\r\n            username: '',\r\n            voornaam: '',\r\n        }\r\n    });\r\n\r\n    // get spelers from api\r\n    React.useEffect(() => {\r\n        getSpelers();\r\n    }, []);\r\n\r\n    const getSpelers = async () => {\r\n        await axios.get<Speler>(getSpelerURL, {\r\n            auth: {\r\n                username: 'manager',\r\n                password: 'manager'\r\n            }\r\n        }).then((response) =>{\r\n            console.log(response.data);\r\n            setSpeler(response.data);\r\n        })\r\n    }\r\n\r\n    const Delete = async () => {\r\n        await axios.put<Speler>(delSpelerURL, {},{\r\n            auth: {\r\n                username: 'manager',\r\n                password: 'manager'\r\n            }\r\n        }).then((response) => {\r\n            getSpelers();\r\n            console.log(response.data)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"col-5 bg-dark text-white-50\">\r\n                <div>\r\n                    <br/>\r\n                    <h1>Speler: {speler.userDTO.username} </h1>\r\n                    <br/>\r\n                    <h3>Voornaam: {speler.userDTO.voornaam} </h3>\r\n                    <h3>Achternaam: {speler.userDTO.achternaam}</h3>\r\n                    <h3>Email: {speler.userDTO.email}</h3>\r\n                    <h3>Geboortedatum: {moment(speler.geboortedatum).format('DD/MM/YYYY')}</h3>\r\n                    <h3>Actief: {speler.actief ? \"true\": \"false\"} </h3>\r\n                    <br/>\r\n\r\n                    <h3>Adres </h3>\r\n                    <h4>Gemeente: {speler.adresDTO.gemeente}</h4>\r\n                    <h4>Postcode: {speler.adresDTO.postcode}</h4>\r\n                    <h4>Straat: {speler.adresDTO.straat}</h4>\r\n                    <h4>Huisnr.: {speler.adresDTO.huisnummer}</h4>\r\n\r\n                    <br/>\r\n\r\n                    {speler.actief?\r\n                        <Button variant={\"danger\"}  onClick={() => Delete()}>\r\n                            deactiveren\r\n                        </Button>\r\n                        :\r\n                        <Button variant={\"primary\"} onClick={() => Delete()}>\r\n                            Activeren\r\n                        </Button>\r\n                    }\r\n\r\n                    <div>\r\n                        <Link to={\"/Spelers/\" + speler.id}>\r\n                            <Button>\r\n                                Cancel\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DelSpeler","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\EditSpeler.tsx",["51","52"],"import React, {ChangeEvent, useState} from \"react\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\ninterface Speler {\r\n    id: number;\r\n    actief: boolean;\r\n    adresDTO: {\r\n        id: number;\r\n        gemeente: string;\r\n        straat: string;\r\n        huisnummer: string;\r\n        postcode:string;\r\n    }\r\n    geboortedatum: string;\r\n    userDTO: {\r\n        id: number;\r\n        achternaam: string;\r\n        email: string;\r\n        role: string;\r\n        username: string;\r\n        voornaam: string;\r\n    }\r\n}\r\n\r\nconst EditSpeler = () => {\r\n    let params = useParams();\r\n\r\n    const getSpelerURL = \"http://localhost:8080/api/spelers/\" + params.id + \"/getOne\";\r\n\r\n    const postSpelerURL = \"http://localhost:8080/api/spelers/\" + params.id + \"/update\";\r\n\r\n\r\n    const [speler, setSpeler] = React.useState<Speler>(    {\r\n        id: 0,\r\n        actief: false,\r\n        adresDTO: {\r\n            id: 0,\r\n            gemeente:'',\r\n            straat:'',\r\n            huisnummer: '',\r\n            postcode:'',\r\n        },\r\n        geboortedatum: '',\r\n        userDTO: {\r\n            id: 0,\r\n            achternaam: '',\r\n            email: '',\r\n            role: '',\r\n            username: '',\r\n            voornaam: '',\r\n        }\r\n    });\r\n\r\n    // get spelers from api\r\n    React.useEffect(() => {\r\n        getSpelers();\r\n    }, []);\r\n\r\n    const getSpelers = async () => {\r\n        await axios.get<Speler>(getSpelerURL, {\r\n            auth: {\r\n                username: 'manager',\r\n                password: 'manager'\r\n            }\r\n        }).then((response) =>{\r\n            console.log(response.data);\r\n            setSpeler(response.data);\r\n        })\r\n    }\r\n\r\n    // POST add speler\r\n    const PutSpeler = async () => {\r\n        console.log(speler)\r\n        await axios.put<Speler>(postSpelerURL, speler, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            auth: {\r\n                username: 'manager',\r\n                password: 'manager'\r\n            }\r\n        }).then((response) => {\r\n            console.log(response.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    // de onChange functie voor speler\r\n    const ChangeHandlerSpeler = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setSpeler(prevSpeler => ({\r\n                ...prevSpeler,\r\n                [event.target.name]: event.target.value\r\n            })\r\n        )\r\n    }\r\n\r\n    // de onChange functie voor UserDTO\r\n    const ChangeHandlerUserDTO = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setSpeler(prevSpeler => ({\r\n                ...prevSpeler,\r\n                userDTO:{...prevSpeler.userDTO ,[event.target.name] : event.target.value}\r\n            })\r\n        )\r\n        console.log(speler);\r\n    }\r\n\r\n    // de onChange functie voor AdresDTO\r\n    const ChangeHandlerAdresDTO = (event: ChangeEvent<HTMLInputElement|HTMLTextAreaElement>) => {\r\n        setSpeler(prevCreateSpeler => ({\r\n                ...prevCreateSpeler,\r\n                adresDTO: {...prevCreateSpeler.adresDTO, [event.target.name]: event.target.value}\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"col-md-5 bg-dark text-white-50\">\r\n                <h1>Speler aanpassen</h1>\r\n                <br/>\r\n                <Form>\r\n                    <Form.Group className={\"mb-3\"}>\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control name=\"username\"\r\n                                      type={\"text\"}\r\n                                      placeholder=\"Username\"\r\n                                      value={speler?.userDTO.username}\r\n                                      onChange={ChangeHandlerUserDTO}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group className={\"mb-3\"}>\r\n                                <Form.Label>Voornaam</Form.Label>\r\n                                <Form.Control name=\"voornaam\"\r\n                                              type={\"text\"}\r\n                                              placeholder=\"Voornaam\"\r\n                                              value={speler?.userDTO.voornaam}\r\n                                              onChange={ChangeHandlerUserDTO}\r\n                                />\r\n\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className={\"mb-3\"}>\r\n                                <Form.Label>Achternaam</Form.Label>\r\n                                <Form.Control name=\"achternaam\"\r\n                                              type={\"text\"}\r\n                                              placeholder=\"Achternaam\"\r\n                                              value={speler?.userDTO.achternaam}\r\n                                              onChange={ChangeHandlerUserDTO}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Form.Group className={\"mb-3\"}>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control name=\"email\"\r\n                                      type={\"email\"}\r\n                                      placeholder=\"Email\"\r\n                                      value={speler?.userDTO.email}\r\n                                      onChange={ChangeHandlerUserDTO}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group className={\"mb-3\"}>\r\n                                <Form.Label>Gemeente</Form.Label>\r\n                                <Form.Control name=\"gemeente\"\r\n                                              type={\"text\"}\r\n                                              placeholder=\"Gemeente\"\r\n                                              value={speler?.adresDTO.gemeente}\r\n                                              onChange={ChangeHandlerAdresDTO}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col xs lg=\"3\">\r\n                            <Form.Group className={\"mb-3\"}>\r\n                                <Form.Label>Postcode</Form.Label>\r\n                                <Form.Control name=\"postcode\"\r\n                                              type={\"text\"}\r\n                                              placeholder=\"Postcode\"\r\n                                              value={speler?.adresDTO.postcode}\r\n                                              onChange={ChangeHandlerAdresDTO}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group className={\"mb-3\"}>\r\n                                <Form.Label>Straat</Form.Label>\r\n                                <Form.Control name=\"straat\"\r\n                                              type={\"text\"}\r\n                                              placeholder=\"Straat\"\r\n                                              value={speler?.adresDTO.straat}\r\n                                              onChange={ChangeHandlerAdresDTO}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col xs lg=\"2\">\r\n                            <Form.Group className={\"mb-3\"}>\r\n                                <Form.Label >huisnr.</Form.Label>\r\n                                <Form.Control name=\"huisnummer\"\r\n                                              type={\"text\"}\r\n                                              value={speler?.adresDTO.huisnummer}\r\n                                              onChange={ChangeHandlerAdresDTO}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Form.Group className={\"mb-3\"}>\r\n                        <Form.Label>Geboortedatum</Form.Label>\r\n                        <Form.Control name=\"geboortedatum\"\r\n                                      type={\"date\"}\r\n                                      placeholder=\"geboortedatum\"\r\n                                      value={moment(speler.geboortedatum).format(\"yyyy-MM-DD\")}\r\n                                      onChange={ChangeHandlerSpeler}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col lg=\"3\">\r\n                            <Link to={\"/Spelers/\" + speler.id}>\r\n                                <Button variant={\"primary\"}  onClick={() => PutSpeler()}>\r\n                                    Submit\r\n                                </Button>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col>\r\n                            <Link to={\"/Spelers/\" + speler.id}>\r\n                                <Button>\r\n                                    Cancel\r\n                                </Button>\r\n                            </Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditSpeler",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":2,"column":16,"nodeType":"59","messageId":"60","endLine":2,"endColumn":25},{"ruleId":"61","severity":1,"message":"62","line":29,"column":7,"nodeType":"59","messageId":"63","endLine":29,"endColumn":13},{"ruleId":"64","severity":1,"message":"65","line":66,"column":8,"nodeType":"66","endLine":66,"endColumn":10,"suggestions":"67"},{"ruleId":"64","severity":1,"message":"68","line":60,"column":8,"nodeType":"66","endLine":60,"endColumn":10,"suggestions":"69"},{"ruleId":"57","severity":1,"message":"70","line":1,"column":29,"nodeType":"59","messageId":"60","endLine":1,"endColumn":37},{"ruleId":"64","severity":1,"message":"68","line":60,"column":8,"nodeType":"66","endLine":60,"endColumn":10,"suggestions":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-redeclare","'Speler' is already defined.","redeclared","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getSpelerURL'. Either include it or remove the dependency array.","ArrayExpression",["74"],"React Hook React.useEffect has a missing dependency: 'getSpelers'. Either include it or remove the dependency array.",["75"],"'useState' is defined but never used.",["76"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},{"desc":"79","fix":"81"},"Update the dependencies array to be: [getSpelerURL]",{"range":"82","text":"83"},"Update the dependencies array to be: [getSpelers]",{"range":"84","text":"85"},{"range":"86","text":"85"},[1671,1673],"[getSpelerURL]",[1425,1427],"[getSpelers]",[1462,1464]]