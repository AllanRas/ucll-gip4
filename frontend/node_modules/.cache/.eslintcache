[{"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\reportWebVitals.js":"1","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\index.tsx":"2","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\App.tsx":"3","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Header.tsx":"4","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Login.tsx":"5","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler\\DelSpeler.tsx":"6","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler\\Spelers.tsx":"7","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler\\AddSpeler.tsx":"8","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler\\Speler.tsx":"9","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler\\EditSpeler.tsx":"10","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Team\\Team.tsx":"11","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Team\\AddSpelerToTeam.tsx":"12","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Team\\AddTeam.tsx":"13","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Team\\Teams.tsx":"14","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Match\\Matches.tsx":"15","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Match\\AddMatch.tsx":"16","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Match\\Match.tsx":"17","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Team\\EditTeamnaam.tsx":"18","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\SpelerRole\\SpelerMatchHist.tsx":"19","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\SpelerRole\\SpelerRoleSpeler.tsx":"20","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\SpelerRole\\SpelerTeams.tsx":"21","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\SpelerRole\\SpelerTeam.tsx":"22","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\SpelerRole\\SpelerMatch.tsx":"23"},{"size":362,"mtime":1637166856204,"results":"24","hashOfConfig":"25"},{"size":517,"mtime":1639949667042,"results":"26","hashOfConfig":"25"},{"size":3544,"mtime":1639949667025,"results":"27","hashOfConfig":"25"},{"size":2957,"mtime":1639951951695,"results":"28","hashOfConfig":"25"},{"size":2732,"mtime":1639949667027,"results":"29","hashOfConfig":"25"},{"size":3481,"mtime":1639949667030,"results":"30","hashOfConfig":"25"},{"size":3678,"mtime":1639949667034,"results":"31","hashOfConfig":"25"},{"size":9887,"mtime":1639949667029,"results":"32","hashOfConfig":"25"},{"size":3892,"mtime":1639949667033,"results":"33","hashOfConfig":"25"},{"size":9283,"mtime":1639949667030,"results":"34","hashOfConfig":"25"},{"size":7065,"mtime":1639949667040,"results":"35","hashOfConfig":"25"},{"size":8719,"mtime":1639949667038,"results":"36","hashOfConfig":"25"},{"size":2519,"mtime":1639949667039,"results":"37","hashOfConfig":"25"},{"size":2071,"mtime":1639949667041,"results":"38","hashOfConfig":"25"},{"size":3426,"mtime":1639949826111,"results":"39","hashOfConfig":"25"},{"size":14234,"mtime":1639949667027,"results":"40","hashOfConfig":"25"},{"size":8726,"mtime":1639952999139,"results":"41","hashOfConfig":"25"},{"size":2086,"mtime":1639949667040,"results":"42","hashOfConfig":"25"},{"size":3124,"mtime":1639949826123,"results":"43","hashOfConfig":"25"},{"size":2840,"mtime":1639949667036,"results":"44","hashOfConfig":"25"},{"size":1891,"mtime":1639949667038,"results":"45","hashOfConfig":"25"},{"size":6287,"mtime":1639949667037,"results":"46","hashOfConfig":"25"},{"size":7312,"mtime":1639953081059,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1e58cps",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"53"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"53"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"53"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"53"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\reportWebVitals.js",[],["102","103"],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\index.tsx",[],["104","105"],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\App.tsx",[],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Header.tsx",[],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Login.tsx",[],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler\\DelSpeler.tsx",["106"],"import {useNavigate, useParams} from \"react-router-dom\";\r\nimport React, {useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from 'moment';\r\nimport {Button, Container} from \"react-bootstrap\";\r\n\r\ninterface Speler {\r\n    id: number;\r\n    actief: boolean;\r\n    adresDTO: {\r\n        id: number;\r\n        gemeente: string;\r\n        straat: string;\r\n        huisnummer: string;\r\n        postcode:string;\r\n    }\r\n    geboortedatum: string;\r\n    userDTO: {\r\n        id: number;\r\n        achternaam: string;\r\n        email: string;\r\n        role: string;\r\n        username: string;\r\n        voornaam: string;\r\n    }\r\n}\r\n\r\n\r\nconst DelSpeler = () => {\r\n    let params = useParams();\r\n    let navigate = useNavigate();\r\n\r\n    const getSpelerURL = \"http://localhost:8080/api/spelers/\" + params.id + \"/getOne\";\r\n\r\n    const delSpelerURL = \"http://localhost:8080/api/spelers/\" + params.id + \"/delete\";\r\n\r\n    const [speler, setSpeler] = React.useState<Speler | any>(    {\r\n        id: 0,\r\n        actief: false,\r\n        adresDTO: {\r\n            id: 0,\r\n            gemeente:'',\r\n            straat:'',\r\n            huisnummer: '',\r\n            postcode:'',\r\n        },\r\n        geboortedatum: '',\r\n        userDTO: {\r\n            id: 0,\r\n            achternaam: '',\r\n            email: '',\r\n            role: '',\r\n            username: '',\r\n            voornaam: '',\r\n        }\r\n    });\r\n\r\n    // get spelers from api\r\n    useEffect(() => {\r\n        getSpelers();\r\n    }, []);\r\n\r\n    const getSpelers = async () => {\r\n        await axios.get<Speler>(getSpelerURL, {\r\n            withCredentials: true\r\n        }).then((response) =>{\r\n            setSpeler(response.data);\r\n        })\r\n    }\r\n\r\n    const Delete = async () => {\r\n        await axios.put<Speler>(delSpelerURL, {},{\r\n            withCredentials: true\r\n        }).then((response) => {\r\n            getSpelers();\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"col-5 bg-dark text-white-50\">\r\n                <div>\r\n                    <br/>\r\n                    <h1>Speler: {speler.userDTO.username} </h1>\r\n                    <br/>\r\n                    <h3>Voornaam: {speler.userDTO.voornaam} </h3>\r\n                    <h3>Achternaam: {speler.userDTO.achternaam}</h3>\r\n                    <h3>Email: {speler.userDTO.email}</h3>\r\n                    <h3>Geboortedatum: {moment(speler.geboortedatum).format('DD/MM/YYYY')}</h3>\r\n                    <h3>Actief: {speler.actief ? \"true\": \"false\"} </h3>\r\n                    <br/>\r\n                    <h3>Adres </h3>\r\n                    <h4>Gemeente: {speler.adresDTO.gemeente}</h4>\r\n                    <h4>Postcode: {speler.adresDTO.postcode}</h4>\r\n                    <h4>Straat: {speler.adresDTO.straat}</h4>\r\n                    <h4>Huisnr.: {speler.adresDTO.huisnummer}</h4>\r\n                    <br/>\r\n                    {speler.actief?\r\n                        <Button variant={\"danger\"}  onClick={() => Delete()}>\r\n                            Deactiveren\r\n                        </Button>\r\n                        :\r\n                        <Button variant={\"primary\"} onClick={() => Delete()}>\r\n                            Activeren\r\n                        </Button>\r\n                    }\r\n                        <Button onClick={() => navigate(-1)}>\r\n                            Terug\r\n                        </Button>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DelSpeler","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler\\Spelers.tsx",[],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler\\AddSpeler.tsx",[],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler\\Speler.tsx",[],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler\\EditSpeler.tsx",["107"],"import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\ninterface Speler {\r\n    id: number;\r\n    actief: boolean;\r\n    adresDTO: {\r\n        id: number;\r\n        gemeente: string;\r\n        straat: string;\r\n        huisnummer: string;\r\n        postcode:string;\r\n    }\r\n    geboortedatum: string;\r\n    userDTO: {\r\n        id: number;\r\n        achternaam: string;\r\n        email: string;\r\n        role: string;\r\n        username: string;\r\n        voornaam: string;\r\n    }\r\n}\r\n\r\nconst EditSpeler = () => {\r\n    let params = useParams();\r\n    let navigate = useNavigate();\r\n\r\n    const getSpelerURL = \"http://localhost:8080/api/spelers/\" + params.id + \"/getOne\";\r\n\r\n    const postSpelerURL = \"http://localhost:8080/api/spelers/\" + params.id + \"/update\";\r\n\r\n\r\n    const [speler, setSpeler] = useState<Speler>(    {\r\n        id: 0,\r\n        actief: false,\r\n        adresDTO: {\r\n            id: 0,\r\n            gemeente:'',\r\n            straat:'',\r\n            huisnummer: '',\r\n            postcode:'',\r\n        },\r\n        geboortedatum: '',\r\n        userDTO: {\r\n            id: 0,\r\n            achternaam: '',\r\n            email: '',\r\n            role: '',\r\n            username: '',\r\n            voornaam: '',\r\n        }\r\n    });\r\n\r\n    // get spelers from api\r\n    useEffect(() => {\r\n        getSpelers();\r\n    }, []);\r\n\r\n    const getSpelers = async () => {\r\n        await axios.get<Speler>(getSpelerURL, {\r\n            withCredentials: true\r\n        }).then((response) =>{\r\n            setSpeler(response.data);\r\n        })\r\n    }\r\n\r\n    // POST add speler\r\n    const PutSpeler = async () => {\r\n        await axios.put<Speler>(postSpelerURL, speler, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            withCredentials: true\r\n        }).then((response) => {\r\n            navigate(-1);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    // de onChange functie voor speler\r\n    const ChangeHandlerSpeler = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setSpeler(prevSpeler => ({\r\n                ...prevSpeler,\r\n                [event.target.name]: event.target.value\r\n            })\r\n        )\r\n    }\r\n\r\n    // de onChange functie voor UserDTO\r\n    const ChangeHandlerUserDTO = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setSpeler(prevSpeler => ({\r\n                ...prevSpeler,\r\n                userDTO:{...prevSpeler.userDTO ,[event.target.name] : event.target.value}\r\n            })\r\n        )\r\n    }\r\n\r\n    // de onChange functie voor AdresDTO\r\n    const ChangeHandlerAdresDTO = (event: ChangeEvent<HTMLInputElement|HTMLTextAreaElement>) => {\r\n        setSpeler(prevCreateSpeler => ({\r\n                ...prevCreateSpeler,\r\n                adresDTO: {...prevCreateSpeler.adresDTO, [event.target.name]: event.target.value}\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"col-md-5 bg-dark text-white-50\">\r\n                <h1>Speler aanpassen</h1>\r\n                <br/>\r\n                <Form>\r\n                    <Form.Group className={\"mb-3\"}>\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control name=\"username\"\r\n                                      type={\"text\"}\r\n                                      placeholder=\"Username\"\r\n                                      value={speler?.userDTO.username}\r\n                                      onChange={ChangeHandlerUserDTO}\r\n                        />\r\n                    </Form.Group>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group className={\"mb-3\"}>\r\n                                <Form.Label>Voornaam</Form.Label>\r\n                                <Form.Control name=\"voornaam\"\r\n                                              type={\"text\"}\r\n                                              placeholder=\"Voornaam\"\r\n                                              value={speler?.userDTO.voornaam}\r\n                                              onChange={ChangeHandlerUserDTO}\r\n                                />\r\n\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className={\"mb-3\"}>\r\n                                <Form.Label>Achternaam</Form.Label>\r\n                                <Form.Control name=\"achternaam\"\r\n                                              type={\"text\"}\r\n                                              placeholder=\"Achternaam\"\r\n                                              value={speler?.userDTO.achternaam}\r\n                                              onChange={ChangeHandlerUserDTO}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Form.Group className={\"mb-3\"}>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control name=\"email\"\r\n                                      type={\"email\"}\r\n                                      placeholder=\"Email\"\r\n                                      value={speler?.userDTO.email}\r\n                                      onChange={ChangeHandlerUserDTO}\r\n                        />\r\n                    </Form.Group>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group className={\"mb-3\"}>\r\n                                <Form.Label>Gemeente</Form.Label>\r\n                                <Form.Control name=\"gemeente\"\r\n                                              type={\"text\"}\r\n                                              placeholder=\"Gemeente\"\r\n                                              value={speler?.adresDTO.gemeente}\r\n                                              onChange={ChangeHandlerAdresDTO}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col xs lg=\"3\">\r\n                            <Form.Group className={\"mb-3\"}>\r\n                                <Form.Label>Postcode</Form.Label>\r\n                                <Form.Control name=\"postcode\"\r\n                                              type={\"text\"}\r\n                                              placeholder=\"Postcode\"\r\n                                              value={speler?.adresDTO.postcode}\r\n                                              onChange={ChangeHandlerAdresDTO}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group className={\"mb-3\"}>\r\n                                <Form.Label>Straat</Form.Label>\r\n                                <Form.Control name=\"straat\"\r\n                                              type={\"text\"}\r\n                                              placeholder=\"Straat\"\r\n                                              value={speler?.adresDTO.straat}\r\n                                              onChange={ChangeHandlerAdresDTO}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col xs lg=\"2\">\r\n                            <Form.Group className={\"mb-3\"}>\r\n                                <Form.Label >huisnr.</Form.Label>\r\n                                <Form.Control name=\"huisnummer\"\r\n                                              type={\"text\"}\r\n                                              value={speler?.adresDTO.huisnummer}\r\n                                              onChange={ChangeHandlerAdresDTO}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Form.Group className={\"mb-3\"}>\r\n                        <Form.Label>Geboortedatum</Form.Label>\r\n                        <Form.Control name=\"geboortedatum\"\r\n                                      type={\"date\"}\r\n                                      placeholder=\"geboortedatum\"\r\n                                      value={moment(speler.geboortedatum).format(\"yyyy-MM-DD\")}\r\n                                      onChange={ChangeHandlerSpeler}\r\n                        />\r\n                    </Form.Group>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col lg=\"3\">\r\n                            <Button variant={\"primary\"}  onClick={() => PutSpeler()}>\r\n                                Submit\r\n                            </Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button onClick={() => navigate(-1)}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditSpeler","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Team\\Team.tsx",["108"],"import {Link, useNavigate, useParams} from \"react-router-dom\";\r\nimport React, {useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Button, Container, Table} from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\ninterface ITeam {\r\n    id : number\r\n    naam : string\r\n    actief : boolean\r\n    managerDTO : {\r\n        id: number\r\n        userDTO: {\r\n            achternaam: string\r\n            email: string\r\n            id: number\r\n            role: string\r\n            username: string\r\n            voornaam: string\r\n        }\r\n    }\r\n    spelerDTO : SpelerDTO[]\r\n}\r\n\r\ninterface SpelerDTO{\r\n    id : number\r\n    reserve : boolean\r\n    spelerid: number\r\n}\r\n\r\n\r\ninterface Speler {\r\n    id: number;\r\n    actief: boolean;\r\n    adresDTO: {\r\n        id: number;\r\n        gemeente: string;\r\n        straat: string;\r\n        huisnummer: string;\r\n        postcode:string;\r\n    }\r\n    geboortedatum: string;\r\n    userDTO: {\r\n        id: number;\r\n        achternaam: string;\r\n        email: string;\r\n        role: string;\r\n        username: string;\r\n        voornaam: string;\r\n    }\r\n}\r\n\r\ninterface Match {\r\n    id : number\r\n    teamBlue : ITeam\r\n    teamRed : ITeam\r\n    scoreBlueTeam : number\r\n    scoreRedTeam : number\r\n    datumtijd: Date\r\n}\r\n\r\nconst Team = () => {\r\n    let params = useParams();\r\n    let navigate = useNavigate();\r\n\r\n    const getTeamURL = \"http://localhost:8080/api/teams/\" + params.id + \"/getOne\";\r\n    const getSpelersURL = \"http://localhost:8080/api/teams/\" + params.id +\"/spelers\";\r\n    const [spelers, setSpelers] = React.useState<Speler[]>([]);\r\n\r\n    const [team, setTeam] = React.useState<ITeam>({\r\n        actief: false,\r\n        id: 0,\r\n        managerDTO: {id: 0, userDTO: {achternaam: \"\", email: \"\", id: 0, role: \"\", username: \"\", voornaam: \"\"}},\r\n        naam: \"\",\r\n        spelerDTO: []\r\n    });\r\n\r\n\r\n    const [matches, setMatches] = React.useState<Match[]>([]);\r\n    const getMatchURL = \"http://localhost:8080/api/matches/matchstats/\" + params.id;\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get<ITeam>(getTeamURL, {\r\n            withCredentials : true\r\n        }).then((response) =>{\r\n            setTeam(response.data);\r\n        });\r\n\r\n        axios.get<Match[]>(getMatchURL, {\r\n            withCredentials: true\r\n        }).then((response) =>{\r\n            setMatches(response.data);\r\n        }).catch((e) => {\r\n            console.log(e);\r\n        });\r\n        getSpelers();\r\n    }, [getTeamURL]);\r\n\r\n\r\n    const getSpelers = () => {\r\n        axios.get<Speler[]>(getSpelersURL, {\r\n            withCredentials: true\r\n        }).then((response) =>{\r\n            setSpelers(response.data);\r\n        }).catch((e) => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"col-11 bg-dark text-white-50\" >\r\n                <div>\r\n                    <h1>{team.naam}</h1>\r\n                    <h2>Manager: {team.managerDTO.userDTO.username}</h2>\r\n                    <br/>\r\n                    <Button onClick={() => navigate(\"/Teams/\" + team.id + \"/AddSpeler\")}>\r\n                        Spelers\r\n                    </Button>\r\n                    <Button onClick={() => navigate(\"/Teams/ \"+ team.id + \"/EditTeamnaam\")}>\r\n                        Team naam aanpassen\r\n                    </Button>\r\n                    <Button onClick={() => navigate(-1)}>\r\n                        Terug\r\n                    </Button>\r\n                </div>\r\n                <br/>\r\n                <h2>Spelers :</h2>\r\n                <Table striped bordered hover variant={'dark'}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>id</th>\r\n                        <th>username</th>\r\n                        <th>voornaam</th>\r\n                        <th>achternaam</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {spelers.map(speler => (team.spelerDTO.some(spelerDTO => spelerDTO.spelerid === speler.id && !spelerDTO.reserve) ?\r\n                                    <tr key={speler.id}>\r\n                                        <td>{speler.id}</td>\r\n                                        <td>{speler.userDTO.username}</td>\r\n                                        <td>{speler.userDTO.voornaam}</td>\r\n                                        <td>{speler.userDTO.achternaam}</td>\r\n                                    </tr> : null))}\r\n                    </tbody>\r\n                </Table>\r\n                <h2>Reserve spelers :</h2>\r\n                <Table striped bordered hover variant={'dark'}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>id</th>\r\n                        <th>username</th>\r\n                        <th>voornaam</th>\r\n                        <th>achternaam</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {spelers.map(speler => (team.spelerDTO.some(spelerDTO => spelerDTO.spelerid === speler.id && spelerDTO.reserve) ?\r\n                                    <tr key={speler.id}>\r\n                                        <td>{speler.id}</td>\r\n                                        <td>{speler.userDTO.username}</td>\r\n                                        <td>{speler.userDTO.voornaam}</td>\r\n                                        <td>{speler.userDTO.achternaam}</td>\r\n                                    </tr> : null))}\r\n                    </tbody>\r\n                </Table>\r\n                <h1>Matches</h1>\r\n                <br/>\r\n                <Table striped bordered hover variant={'dark'}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th className=\"col-md-0\">id</th>\r\n                        <th className=\"col-md-3\">Team Blue</th>\r\n                        <th className=\"col-md-3\">Team Red</th>\r\n                        <th>won</th>\r\n                        <th className=\"col-md-0\">blue - red</th>\r\n                        <th className=\"col-md-2\">datum en tijd</th>\r\n                        <th className=\"col-md-2\"/>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {matches.map(match => (\r\n                            <tr key={match.id}>\r\n                                <td>{match.id}</td>\r\n                                <td>{match.teamBlue.naam}</td>\r\n                                <td>{match.teamRed.naam}</td>\r\n                                <td>{match.scoreRedTeam === 0 && match.scoreBlueTeam === 0 ? \"---\": match.scoreRedTeam < match.scoreBlueTeam ? match.teamBlue.naam : match.teamRed.naam}</td>\r\n                                <td>{match.scoreBlueTeam}-{match.scoreRedTeam}</td>\r\n                                <td>{moment(match.datumtijd).format('DD-MM-YYYY hh:mm')}</td>\r\n                                <td><Link to={\"/Matches/\" + match.id}>Details & Score</Link></td>\r\n                            </tr>))}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Team","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Team\\AddSpelerToTeam.tsx",["109"],"import { useNavigate, useParams} from \"react-router-dom\";\r\nimport React, { useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Button, Container, Table} from \"react-bootstrap\";\r\n\r\ninterface Team {\r\n    id : number\r\n    naam : string\r\n    actief : boolean\r\n    spelerDTO : SpelerDTO[]\r\n    managerDTO : {\r\n        id: number\r\n        userDTO: {\r\n            username: string\r\n        }\r\n    }\r\n}\r\n\r\ninterface SpelerDTO{\r\n    id : number\r\n    reserve : boolean\r\n    spelerid: number\r\n}\r\n\r\ninterface Speler {\r\n    id: number;\r\n    actief: boolean;\r\n    adresDTO: {\r\n        id: number;\r\n        gemeente: string;\r\n        straat: string;\r\n        huisnummer: string;\r\n        postcode:string;\r\n    }\r\n    geboortedatum: string;\r\n    userDTO: {\r\n        id: number;\r\n        achternaam: string;\r\n        email: string;\r\n        role: string;\r\n        username: string;\r\n        voornaam: string;\r\n    }\r\n}\r\n\r\nconst AddSpelerToTeam = () => {\r\n\r\n    let params = useParams();\r\n    let navigate = useNavigate();\r\n\r\n    // get Team\r\n    const getTeamURL = \"http://localhost:8080/api/teams/\" + params.id + \"/getOne\";\r\n    const [team, setTeam] = useState<Team>({\r\n        managerDTO: {id: 0, userDTO: {username: \"\"}},\r\n        spelerDTO: [],\r\n        actief: false,\r\n        naam: \"\",\r\n        id: 0\r\n        }\r\n    );\r\n\r\n    //get spelers\r\n    const getSpelersURL = \"http://localhost:8080/api/spelers\";\r\n    const [spelers, setSpelers] = React.useState<Speler[]>([]);\r\n\r\n\r\n    useEffect(() => {\r\n        getTeam();\r\n        getSpelers();\r\n    },[]);\r\n\r\n    const getTeam = () => {\r\n        axios.get<Team>(getTeamURL, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },withCredentials : true\r\n        }).then((response) => {\r\n            setTeam(response.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    const getSpelers = () => {\r\n        axios.get<Speler[]>(getSpelersURL, {\r\n            withCredentials: true\r\n        }).then((response) =>{\r\n            setSpelers(response.data);\r\n        }).catch((e) => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n\r\n    //add speler to team\r\n    const teamsURL = \"http://localhost:8080/api/teams\";\r\n    const PostAddSpeler = async (spelerId : number , reserve: boolean) => {\r\n        await axios.post<Team>(teamsURL + \"/\" + params.id + \"/AddSpeler/\"+  + spelerId + \"/\" + reserve,{}, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },withCredentials : true\r\n        }).then((response) => {\r\n            getTeam();\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    const DeleteSpeler = (spelerid : number, teamid : number) => {\r\n        const deleteSpelerURL =  \"http://localhost:8080/api/teams/\" + teamid +\"/Delete/\" + spelerid\r\n        axios.delete(deleteSpelerURL, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },withCredentials : true\r\n        }).then((response) => {\r\n            getTeam();\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    const ReservePromoveren = (spelerid : number, teamid : number) => {\r\n        const reservePromoverenURL =  \"http://localhost:8080/api/teams/\" + teamid +\"/ReservePromoveren/\" + spelerid\r\n        axios.put(reservePromoverenURL, {},{\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },withCredentials : true\r\n        }).then((response) => {\r\n            getTeam();\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"col-md-11 bg-dark text-white-50\">\r\n                <h1>team : {team.naam}</h1>\r\n                <br/>\r\n                <Button onClick={() => navigate(-1)}>Terug</Button>\r\n                <h2>manager: {team.managerDTO.userDTO.username} </h2>\r\n                <h2>Spelers : </h2>\r\n                <Table striped bordered hover variant={'dark'}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>id</th>\r\n                        <th>username</th>\r\n                        <th>voornaam</th>\r\n                        <th>achternaam</th>\r\n                        <th className=\"col-md-2\"></th>\r\n                        <th className=\"col-md-2\"></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        spelers.map(speler => (\r\n                                team.spelerDTO.some(spelerDTO => spelerDTO.spelerid === speler.id && !spelerDTO.reserve) ?\r\n                                    <tr key={speler.id}>\r\n                                        <td>{speler.id}</td>\r\n                                        <td>{speler.userDTO.username}</td>\r\n                                        <td>{speler.userDTO.voornaam}</td>\r\n                                        <td>{speler.userDTO.achternaam}</td>\r\n                                        <td><Button onClick={() => ReservePromoveren(speler.id, team.id)}> degraderen </Button></td>\r\n                                        <td><Button onClick={() => DeleteSpeler(speler.id, team.id)}> Verwijderen </Button></td>\r\n                                    </tr>\r\n                            : null\r\n                            )\r\n                        )\r\n                    }\r\n\r\n                    </tbody>\r\n                </Table>\r\n                <h2>Reserve spelers :</h2>\r\n                <Table striped bordered hover variant={'dark'}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>id</th>\r\n                        <th>username</th>\r\n                        <th>voornaam</th>\r\n                        <th>achternaam</th>\r\n                        <th className=\"col-md-2\"></th>\r\n                        <th className=\"col-md-2\"></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        spelers.map(speler => (\r\n                                team.spelerDTO.some(spelerDTO => spelerDTO.spelerid === speler.id && spelerDTO.reserve) ?\r\n                                    <tr key={speler.id}>\r\n                                        <td>{speler.id}</td>\r\n                                        <td>{speler.userDTO.username}</td>\r\n                                        <td>{speler.userDTO.voornaam}</td>\r\n                                        <td>{speler.userDTO.achternaam}</td>\r\n                                        <td><Button onClick={() => ReservePromoveren(speler.id, team.id)}> Promoveren </Button></td>\r\n                                        <td><Button onClick={() => DeleteSpeler(speler.id, team.id)}> Verwijderen </Button></td>\r\n                                    </tr>\r\n                                    : null\r\n                            )\r\n                        )\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n                <h2>Spelers Toevoegen</h2>\r\n                <Table striped bordered hover variant={'dark'}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>id</th>\r\n                        <th>username</th>\r\n                        <th>voornaam</th>\r\n                        <th>achternaam</th>\r\n                        <th className=\"col-md-1\"> speler </th>\r\n                        <th className=\"col-md-1\"> reserve </th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        spelers.map(speler => (\r\n                            speler.actief?\r\n                            team.spelerDTO.some(spelerDTO => spelerDTO.spelerid === speler.id) ? \"\" :\r\n                                <tr key={speler.id}>\r\n                                    <td>{speler.id}</td>\r\n                                    <td>{speler.userDTO.username}</td>\r\n                                    <td>{speler.userDTO.voornaam}</td>\r\n                                    <td>{speler.userDTO.achternaam}</td>\r\n                                    <td><Button className=\"btn-success\" onClick={() => PostAddSpeler(speler.id, false)}> + </Button></td>\r\n                                    <td><Button className=\"btn-warning\" onClick={() => PostAddSpeler(speler.id, true)}> + </Button></td>\r\n                                </tr>\r\n                                : null\r\n                            )\r\n                        )\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddSpelerToTeam","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Team\\AddTeam.tsx",[],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Team\\Teams.tsx",[],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Match\\Matches.tsx",[],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Match\\AddMatch.tsx",[],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Match\\Match.tsx",["110"],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Team\\EditTeamnaam.tsx",[],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\SpelerRole\\SpelerMatchHist.tsx",["111","112"],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\SpelerRole\\SpelerRoleSpeler.tsx",["113"],"import {useNavigate, useParams} from \"react-router-dom\";\r\nimport React, {useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from 'moment';\r\nimport {Button, Container} from \"react-bootstrap\";\r\n\r\ninterface ISpeler {\r\n    id: number;\r\n    actief: boolean;\r\n    adresDTO: {\r\n        id: number;\r\n        gemeente: string;\r\n        straat: string;\r\n        huisnummer: string;\r\n        postcode:string;\r\n    }\r\n    geboortedatum: string;\r\n    userDTO: {\r\n        id: number;\r\n        achternaam: string;\r\n        email: string;\r\n        role: string;\r\n        username: string;\r\n        voornaam: string;\r\n    }\r\n}\r\n\r\n\r\nconst SpelerRoleSpeler = () => {\r\n    let params = useParams();\r\n    let navigate = useNavigate();\r\n\r\n    // maakt niet uit welke id, bij spelerrole wordt UserPrincipal id gebruikt\r\n    const getSpelerURL = \"http://localhost:8080/api/spelers/0/getOne\";\r\n\r\n    const [speler, setSpeler] = React.useState<ISpeler | any>(    {\r\n        id: 0,\r\n        actief: false,\r\n        adresDTO: {\r\n            id: 0,\r\n            gemeente:'',\r\n            straat:'',\r\n            huisnummer: '',\r\n            postcode:'',\r\n        },\r\n        geboortedatum: '',\r\n        userDTO: {\r\n            id: 0,\r\n            achternaam: '',\r\n            email: '',\r\n            role: '',\r\n            username: '',\r\n            voornaam: '',\r\n        }\r\n    });\r\n\r\n    // get spelers from api\r\n    useEffect(() => {\r\n        axios.get<ISpeler[]>(getSpelerURL, {\r\n            withCredentials : true\r\n        }).then((response) =>{\r\n            setSpeler(response.data);\r\n        });\r\n    }, [getSpelerURL]);\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"col-8 bg-dark text-white-50\" >\r\n                <div>\r\n                    <br/>\r\n                    <h1>Speler: {speler.userDTO.username} </h1>\r\n                    <br/>\r\n                    <h3>Voornaam: {speler.userDTO.voornaam} </h3>\r\n                    <h3>Achternaam: {speler.userDTO.achternaam}</h3>\r\n                    <h3>Email: {speler.userDTO.email}</h3>\r\n                    <h3>Geboortedatum: {moment(speler.geboortedatum).format('DD/MM/YYYY')}</h3>\r\n                    <h3>Actief: {speler.actief ? \"true\": \"false\"} </h3>\r\n                    <br/>\r\n                    <h3>Adres </h3>\r\n                    <h4>Gemeente: {speler.adresDTO.gemeente}</h4>\r\n                    <h4>Postcode: {speler.adresDTO.postcode}</h4>\r\n                    <h4>Straat: {speler.adresDTO.straat}</h4>\r\n                    <h4>Huisnr.: {speler.adresDTO.huisnummer}</h4>\r\n                    <br/>\r\n                    <Button onClick={() => navigate(\"/EditSpeler/\" + speler.id)}>\r\n                        gegevens wijzigen\r\n                    </Button>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SpelerRoleSpeler","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\SpelerRole\\SpelerTeams.tsx",[],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\SpelerRole\\SpelerTeam.tsx",["114"],"import {Link, useNavigate, useParams} from \"react-router-dom\";\r\nimport React, {useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Button, Container, Table} from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\ninterface ITeam {\r\n    id : number\r\n    naam : string\r\n    actief : boolean\r\n    managerDTO : {\r\n        id: number\r\n        userDTO: {\r\n            achternaam: string\r\n            email: string\r\n            id: number\r\n            role: string\r\n            username: string\r\n            voornaam: string\r\n        }\r\n    }\r\n    spelerDTO : SpelerDTO[]\r\n}\r\n\r\ninterface SpelerDTO{\r\n    id : number\r\n    reserve : boolean\r\n    spelerid: number\r\n}\r\n\r\n\r\ninterface Speler {\r\n    id: number;\r\n    actief: boolean;\r\n    adresDTO: {\r\n        id: number;\r\n        gemeente: string;\r\n        straat: string;\r\n        huisnummer: string;\r\n        postcode:string;\r\n    }\r\n    geboortedatum: string;\r\n    userDTO: {\r\n        id: number;\r\n        achternaam: string;\r\n        email: string;\r\n        role: string;\r\n        username: string;\r\n        voornaam: string;\r\n    }\r\n}\r\n\r\ninterface Match {\r\n    id : number\r\n    teamBlue : ITeam\r\n    teamRed : ITeam\r\n    scoreBlueTeam : number\r\n    scoreRedTeam : number\r\n    datumtijd: Date\r\n}\r\n\r\nconst SpelerTeam = () => {\r\n    let params = useParams();\r\n    let navigate = useNavigate();\r\n\r\n    const getTeamURL = \"http://localhost:8080/api/teams/\" + params.id + \"/getOne\";\r\n    const getSpelersURL = \"http://localhost:8080/api/teams/\" + params.id +\"/spelers\";\r\n    const [spelers, setSpelers] = React.useState<Speler[]>([]);\r\n\r\n    const [team, setTeam] = React.useState<ITeam>({\r\n        actief: false,\r\n        id: 0,\r\n        managerDTO: {id: 0, userDTO: {achternaam: \"\", email: \"\", id: 0, role: \"\", username: \"\", voornaam: \"\"}},\r\n        naam: \"\",\r\n        spelerDTO: []\r\n    });\r\n\r\n    const [matches, setMatches] = React.useState<Match[]>([]);\r\n    const getMatchURL = \"http://localhost:8080/api/matches/matchstats/\" + params.id;\r\n\r\n    useEffect(() => {\r\n        axios.get<ITeam>(getTeamURL, {\r\n            withCredentials : true\r\n        }).then((response) =>{\r\n            setTeam(response.data);\r\n        });\r\n\r\n        axios.get<Match[]>(getMatchURL, {\r\n            withCredentials: true\r\n        }).then((response) =>{\r\n            setMatches(response.data);\r\n        }).catch((e) => {\r\n            console.log(e);\r\n        });\r\n        getSpelers();\r\n    }, [getTeamURL]);\r\n\r\n    const getSpelers = () => {\r\n        axios.get<Speler[]>(getSpelersURL, {\r\n            withCredentials: true\r\n        }).then((response) =>{\r\n            setSpelers(response.data);\r\n        }).catch((e) => {\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"col-11 bg-dark text-white-50\" >\r\n                <div>\r\n                    <h1>{team.naam}</h1>\r\n                    <h2>Manager: {team.managerDTO.userDTO.username}</h2>\r\n                    <br/>\r\n                    <Button onClick={() => navigate(-1)}>\r\n                        Terug\r\n                    </Button>\r\n                </div>\r\n                <br/>\r\n                <h2>Spelers :</h2>\r\n                <Table striped bordered hover variant={'dark'}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>username</th>\r\n                        <th>voornaam</th>\r\n                        <th>achternaam</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {spelers.map(speler => (team.spelerDTO.some(spelerDTO => spelerDTO.spelerid === speler.id && !spelerDTO.reserve) ?\r\n                        <tr key={speler.id}>\r\n                            <td>{speler.userDTO.username}</td>\r\n                            <td>{speler.userDTO.voornaam}</td>\r\n                            <td>{speler.userDTO.achternaam}</td>\r\n                        </tr> : null))}\r\n                    </tbody>\r\n                </Table>\r\n                <h2>Reserve spelers :</h2>\r\n                <Table striped bordered hover variant={'dark'}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>username</th>\r\n                        <th>voornaam</th>\r\n                        <th>achternaam</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {spelers.map(speler => (team.spelerDTO.some(spelerDTO => spelerDTO.spelerid === speler.id && spelerDTO.reserve) ?\r\n                        <tr key={speler.id}>\r\n                            <td>{speler.userDTO.username}</td>\r\n                            <td>{speler.userDTO.voornaam}</td>\r\n                            <td>{speler.userDTO.achternaam}</td>\r\n                        </tr> : null))}\r\n                    </tbody>\r\n                </Table>\r\n                <h1>Matches</h1>\r\n                <br/>\r\n                <Table striped bordered hover variant={'dark'}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th className=\"col-md-3\">Team Blue</th>\r\n                        <th className=\"col-md-3\">Team Red</th>\r\n                        <th>won</th>\r\n                        <th className=\"col-md-0\">blue - red</th>\r\n                        <th className=\"col-md-2\">datum en tijd</th>\r\n                        <th className=\"col-md-2\"/>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {matches.map(match => (\r\n                        <tr key={match.id}>\r\n                            <td>{match.teamBlue.naam}</td>\r\n                            <td>{match.teamRed.naam}</td>\r\n                            <td>{match.scoreRedTeam === 0 && match.scoreBlueTeam === 0 ? \"---\": match.scoreRedTeam < match.scoreBlueTeam ? match.teamBlue.naam : match.teamRed.naam}</td>\r\n                            <td>{match.scoreBlueTeam}-{match.scoreRedTeam}</td>\r\n                            <td>{moment(match.datumtijd).format('DD-MM-YYYY hh:mm')}</td>\r\n                            <td><Link to={\"/SpelerMatches/\" + match.id}>Details & Score</Link></td>\r\n                        </tr>))}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SpelerTeam","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\SpelerRole\\SpelerMatch.tsx",["115","116","117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":61,"column":8,"nodeType":"124","endLine":61,"endColumn":10,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"123","line":61,"column":8,"nodeType":"124","endLine":61,"endColumn":10,"suggestions":"126"},{"ruleId":"122","severity":1,"message":"127","line":100,"column":8,"nodeType":"124","endLine":100,"endColumn":20,"suggestions":"128"},{"ruleId":"122","severity":1,"message":"129","line":70,"column":7,"nodeType":"124","endLine":70,"endColumn":9,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":24,"column":11,"nodeType":"133","messageId":"134","endLine":24,"endColumn":17},{"ruleId":"131","severity":1,"message":"135","line":3,"column":15,"nodeType":"133","messageId":"134","endLine":3,"endColumn":26},{"ruleId":"131","severity":1,"message":"136","line":3,"column":28,"nodeType":"133","messageId":"134","endLine":3,"endColumn":37},{"ruleId":"131","severity":1,"message":"137","line":30,"column":9,"nodeType":"133","messageId":"134","endLine":30,"endColumn":15},{"ruleId":"122","severity":1,"message":"127","line":96,"column":8,"nodeType":"124","endLine":96,"endColumn":20,"suggestions":"138"},{"ruleId":"131","severity":1,"message":"139","line":1,"column":33,"nodeType":"133","messageId":"134","endLine":1,"endColumn":37},{"ruleId":"131","severity":1,"message":"140","line":122,"column":11,"nodeType":"133","messageId":"134","endLine":122,"endColumn":29},{"ruleId":"131","severity":1,"message":"141","line":132,"column":11,"nodeType":"133","messageId":"134","endLine":132,"endColumn":19},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSpelers'. Either include it or remove the dependency array.","ArrayExpression",["144"],["145"],"React Hook useEffect has missing dependencies: 'getMatchURL' and 'getSpelers'. Either include them or remove the dependency array.",["146"],"React Hook useEffect has a missing dependency: 'getTeam'. Either include it or remove the dependency array.",["147"],"@typescript-eslint/no-unused-vars","'Speler' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","'useParams' is defined but never used.","'params' is assigned a value but never used.",["148"],"'Form' is defined but never used.","'ChangeHandlerScore' is assigned a value but never used.","'addScore' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"149","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"152","fix":"156"},"Update the dependencies array to be: [getSpelers]",{"range":"157","text":"158"},{"range":"159","text":"158"},"Update the dependencies array to be: [getMatchURL, getSpelers, getTeamURL]",{"range":"160","text":"161"},"Update the dependencies array to be: [getTeam]",{"range":"162","text":"163"},{"range":"164","text":"161"},[1474,1476],"[getSpelers]",[1503,1505],[2430,2442],"[getMatchURL, getSpelers, getTeamURL]",[1557,1559],"[getTeam]",[2428,2440]]