[{"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\reportWebVitals.js":"1","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\index.tsx":"2","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\App.tsx":"3","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Header.tsx":"4","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Login.tsx":"5","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler\\DelSpeler.tsx":"6","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler\\Spelers.tsx":"7","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler\\AddSpeler.tsx":"8","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler\\Speler.tsx":"9","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler\\EditSpeler.tsx":"10","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Team\\Team.tsx":"11","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Team\\AddSpelerToTeam.tsx":"12","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Team\\AddTeam.tsx":"13","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Team\\Teams.tsx":"14"},{"size":362,"mtime":1637166856204,"results":"15","hashOfConfig":"16"},{"size":517,"mtime":1639305188999,"results":"17","hashOfConfig":"16"},{"size":1923,"mtime":1639521833557,"results":"18","hashOfConfig":"16"},{"size":3559,"mtime":1639521833559,"results":"19","hashOfConfig":"16"},{"size":2742,"mtime":1639304817470,"results":"20","hashOfConfig":"16"},{"size":3647,"mtime":1639569926832,"results":"21","hashOfConfig":"16"},{"size":2403,"mtime":1639521833566,"results":"22","hashOfConfig":"16"},{"size":9967,"mtime":1639521833560,"results":"23","hashOfConfig":"16"},{"size":3444,"mtime":1639521833565,"results":"24","hashOfConfig":"16"},{"size":9478,"mtime":1639521833562,"results":"25","hashOfConfig":"16"},{"size":5350,"mtime":1639572924293,"results":"26","hashOfConfig":"16"},{"size":8504,"mtime":1639572080244,"results":"27","hashOfConfig":"16"},{"size":2597,"mtime":1639521833568,"results":"28","hashOfConfig":"16"},{"size":1935,"mtime":1639521833569,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1e58cps",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"35"},"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\reportWebVitals.js",[],["64","65"],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\index.tsx",[],["66","67"],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\App.tsx",[],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Header.tsx",[],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Login.tsx",["68"],"import {Button, Col, Container, Form, FormControl, FormGroup, FormLabel} from \"react-bootstrap\";\r\nimport React, {ChangeEvent, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\ninterface IUser{\r\n    username: string,\r\n    password: string\r\n}\r\n\r\nconst Login = () => {\r\n\r\n    let navigate = useNavigate();\r\n    const loginURL = 'http://localhost:8080/api/login/user'\r\n\r\n    const [user, setUser] = useState<IUser>(\r\n        {\r\n            username: '',\r\n            password: ''\r\n        }\r\n    );\r\n\r\n    // POST login speler\r\n    const PostLogin = async () => {\r\n        console.log(user)\r\n        await axios.post<IUser>(loginURL, user,{\r\n            auth:{\r\n                username: user.username,\r\n                password: user.password\r\n            },\r\n            withCredentials: true,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Headers' : '*',\r\n                'Access-Control-Allow-Credentials': 'include'},\r\n\r\n        }).then((response) => {\r\n\r\n            console.log(\"Logged in\")\r\n            console.log(response.data);\r\n            navigate(\"/Spelers\")\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    const ChangeHandlerLogin = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setUser(prevUser => ({\r\n                ...prevUser,\r\n                [event.target.name]: event.target.value\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"col-md-5\">\r\n                <Form>\r\n                    <FormGroup>\r\n                        <FormLabel>Username</FormLabel>\r\n                        <FormControl name=\"username\"\r\n                                     type=\"text\"\r\n                                     value={user.username}\r\n                                     onChange={ChangeHandlerLogin}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <FormLabel>Username</FormLabel>\r\n                        <FormControl name=\"password\"\r\n                                     type=\"password\"\r\n                                     value={user.password}\r\n                                     onChange={ChangeHandlerLogin}\r\n                        />\r\n                    </FormGroup>\r\n\r\n                    <Col lg=\"3\">\r\n                        <Button variant={\"primary\"}  onClick={() => PostLogin()}>\r\n                            Submit\r\n                        </Button>\r\n                    </Col>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler\\DelSpeler.tsx",["69"],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler\\Spelers.tsx",[],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler\\AddSpeler.tsx",[],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler\\Speler.tsx",["70"],"import {useNavigate, useParams} from \"react-router-dom\";\r\nimport React, {useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from 'moment';\r\nimport {Button, Container} from \"react-bootstrap\";\r\n\r\ninterface Speler {\r\n    id: number;\r\n    actief: boolean;\r\n    adresDTO: {\r\n        id: number;\r\n        gemeente: string;\r\n        straat: string;\r\n        huisnummer: string;\r\n        postcode:string;\r\n    }\r\n    geboortedatum: string;\r\n    userDTO: {\r\n        id: number;\r\n        achternaam: string;\r\n        email: string;\r\n        role: string;\r\n        username: string;\r\n        voornaam: string;\r\n    }\r\n}\r\n\r\n\r\nconst Speler = () => {\r\n    let params = useParams();\r\n    let navigate = useNavigate();\r\n\r\n    const getSpelerURL = \"http://localhost:8080/api/spelers/\" + params.id + \"/getOne\";\r\n\r\n    const [speler, setSpeler] = React.useState<Speler | any>(    {\r\n            id: 0,\r\n            actief: false,\r\n            adresDTO: {\r\n                id: 0,\r\n                gemeente:'',\r\n                straat:'',\r\n                huisnummer: '',\r\n                postcode:'',\r\n            },\r\n            geboortedatum: '',\r\n            userDTO: {\r\n                id: 0,\r\n                achternaam: '',\r\n                email: '',\r\n                role: '',\r\n                username: '',\r\n                voornaam: '',\r\n        }\r\n    });\r\n\r\n    // get spelers from api\r\n    useEffect(() => {\r\n        axios.get<Speler[]>(getSpelerURL, {\r\n            withCredentials : true\r\n        }).then((response) =>{\r\n            console.log(response.data);\r\n            setSpeler(response.data);\r\n        });\r\n    }, [getSpelerURL]);\r\n\r\n    return (\r\n            <>\r\n                <Container className=\"col-8 bg-dark text-white-50\" >\r\n                    <div>\r\n                        <br/>\r\n                        <h1>Speler: {speler.userDTO.username} </h1>\r\n                        <br/>\r\n                        <h3>Voornaam: {speler.userDTO.voornaam} </h3>\r\n                        <h3>Achternaam: {speler.userDTO.achternaam}</h3>\r\n                        <h3>Email: {speler.userDTO.email}</h3>\r\n                        <h3>Geboortedatum: {moment(speler.geboortedatum).format('DD/MM/YYYY')}</h3>\r\n                        <h3>Actief: {speler.actief ? \"true\": \"false\"} </h3>\r\n                        <br/>\r\n\r\n                        <h3>Adres </h3>\r\n                        <h4>Gemeente: {speler.adresDTO.gemeente}</h4>\r\n                        <h4>Postcode: {speler.adresDTO.postcode}</h4>\r\n                        <h4>Straat: {speler.adresDTO.straat}</h4>\r\n                        <h4>Huisnr.: {speler.adresDTO.huisnummer}</h4>\r\n\r\n                        <br/>\r\n                        <Button onClick={() => navigate(\"/Spelers\")}>\r\n                            Terug\r\n                        </Button>\r\n                        <Button onClick={() => navigate(\"/EditSpeler/\" + speler.id)}>\r\n                            Speler aanpassen\r\n                        </Button>\r\n                        <Button onClick={() => navigate(\"/DelSpeler/\" + speler.id)}>\r\n                            {speler.actief?\r\n                                \"Speler deactiveren\"\r\n                                :\r\n                                \"Speler activeren\"\r\n                            }\r\n                        </Button>\r\n                    </div>\r\n                </Container>\r\n            </>\r\n        )\r\n}\r\n\r\nexport default Speler","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Speler\\EditSpeler.tsx",["71"],"import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\ninterface Speler {\r\n    id: number;\r\n    actief: boolean;\r\n    adresDTO: {\r\n        id: number;\r\n        gemeente: string;\r\n        straat: string;\r\n        huisnummer: string;\r\n        postcode:string;\r\n    }\r\n    geboortedatum: string;\r\n    userDTO: {\r\n        id: number;\r\n        achternaam: string;\r\n        email: string;\r\n        role: string;\r\n        username: string;\r\n        voornaam: string;\r\n    }\r\n}\r\n\r\nconst EditSpeler = () => {\r\n    let params = useParams();\r\n    let navigate = useNavigate();\r\n\r\n    const getSpelerURL = \"http://localhost:8080/api/spelers/\" + params.id + \"/getOne\";\r\n\r\n    const postSpelerURL = \"http://localhost:8080/api/spelers/\" + params.id + \"/update\";\r\n\r\n\r\n    const [speler, setSpeler] = useState<Speler>(    {\r\n        id: 0,\r\n        actief: false,\r\n        adresDTO: {\r\n            id: 0,\r\n            gemeente:'',\r\n            straat:'',\r\n            huisnummer: '',\r\n            postcode:'',\r\n        },\r\n        geboortedatum: '',\r\n        userDTO: {\r\n            id: 0,\r\n            achternaam: '',\r\n            email: '',\r\n            role: '',\r\n            username: '',\r\n            voornaam: '',\r\n        }\r\n    });\r\n\r\n    // get spelers from api\r\n    useEffect(() => {\r\n        getSpelers();\r\n    }, []);\r\n\r\n    const getSpelers = async () => {\r\n        await axios.get<Speler>(getSpelerURL, {\r\n            withCredentials: true\r\n        }).then((response) =>{\r\n            console.log(response.data);\r\n            setSpeler(response.data);\r\n        })\r\n    }\r\n\r\n    // POST add speler\r\n    const PutSpeler = async () => {\r\n        console.log(speler)\r\n        await axios.put<Speler>(postSpelerURL, speler, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            withCredentials: true\r\n        }).then((response) => {\r\n            navigate(\"/Spelers/\" + speler.id);\r\n            console.log(response.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    // de onChange functie voor speler\r\n    const ChangeHandlerSpeler = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setSpeler(prevSpeler => ({\r\n                ...prevSpeler,\r\n                [event.target.name]: event.target.value\r\n            })\r\n        )\r\n    }\r\n\r\n    // de onChange functie voor UserDTO\r\n    const ChangeHandlerUserDTO = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setSpeler(prevSpeler => ({\r\n                ...prevSpeler,\r\n                userDTO:{...prevSpeler.userDTO ,[event.target.name] : event.target.value}\r\n            })\r\n        )\r\n        console.log(speler);\r\n    }\r\n\r\n    // de onChange functie voor AdresDTO\r\n    const ChangeHandlerAdresDTO = (event: ChangeEvent<HTMLInputElement|HTMLTextAreaElement>) => {\r\n        setSpeler(prevCreateSpeler => ({\r\n                ...prevCreateSpeler,\r\n                adresDTO: {...prevCreateSpeler.adresDTO, [event.target.name]: event.target.value}\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"col-md-5 bg-dark text-white-50\">\r\n                <h1>Speler aanpassen</h1>\r\n                <br/>\r\n                <Form>\r\n                    <Form.Group className={\"mb-3\"}>\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control name=\"username\"\r\n                                      type={\"text\"}\r\n                                      placeholder=\"Username\"\r\n                                      value={speler?.userDTO.username}\r\n                                      onChange={ChangeHandlerUserDTO}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group className={\"mb-3\"}>\r\n                                <Form.Label>Voornaam</Form.Label>\r\n                                <Form.Control name=\"voornaam\"\r\n                                              type={\"text\"}\r\n                                              placeholder=\"Voornaam\"\r\n                                              value={speler?.userDTO.voornaam}\r\n                                              onChange={ChangeHandlerUserDTO}\r\n                                />\r\n\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className={\"mb-3\"}>\r\n                                <Form.Label>Achternaam</Form.Label>\r\n                                <Form.Control name=\"achternaam\"\r\n                                              type={\"text\"}\r\n                                              placeholder=\"Achternaam\"\r\n                                              value={speler?.userDTO.achternaam}\r\n                                              onChange={ChangeHandlerUserDTO}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Form.Group className={\"mb-3\"}>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control name=\"email\"\r\n                                      type={\"email\"}\r\n                                      placeholder=\"Email\"\r\n                                      value={speler?.userDTO.email}\r\n                                      onChange={ChangeHandlerUserDTO}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group className={\"mb-3\"}>\r\n                                <Form.Label>Gemeente</Form.Label>\r\n                                <Form.Control name=\"gemeente\"\r\n                                              type={\"text\"}\r\n                                              placeholder=\"Gemeente\"\r\n                                              value={speler?.adresDTO.gemeente}\r\n                                              onChange={ChangeHandlerAdresDTO}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col xs lg=\"3\">\r\n                            <Form.Group className={\"mb-3\"}>\r\n                                <Form.Label>Postcode</Form.Label>\r\n                                <Form.Control name=\"postcode\"\r\n                                              type={\"text\"}\r\n                                              placeholder=\"Postcode\"\r\n                                              value={speler?.adresDTO.postcode}\r\n                                              onChange={ChangeHandlerAdresDTO}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group className={\"mb-3\"}>\r\n                                <Form.Label>Straat</Form.Label>\r\n                                <Form.Control name=\"straat\"\r\n                                              type={\"text\"}\r\n                                              placeholder=\"Straat\"\r\n                                              value={speler?.adresDTO.straat}\r\n                                              onChange={ChangeHandlerAdresDTO}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col xs lg=\"2\">\r\n                            <Form.Group className={\"mb-3\"}>\r\n                                <Form.Label >huisnr.</Form.Label>\r\n                                <Form.Control name=\"huisnummer\"\r\n                                              type={\"text\"}\r\n                                              value={speler?.adresDTO.huisnummer}\r\n                                              onChange={ChangeHandlerAdresDTO}\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Form.Group className={\"mb-3\"}>\r\n                        <Form.Label>Geboortedatum</Form.Label>\r\n                        <Form.Control name=\"geboortedatum\"\r\n                                      type={\"date\"}\r\n                                      placeholder=\"geboortedatum\"\r\n                                      value={moment(speler.geboortedatum).format(\"yyyy-MM-DD\")}\r\n                                      onChange={ChangeHandlerSpeler}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col lg=\"3\">\r\n                            <Button variant={\"primary\"}  onClick={() => PutSpeler()}>\r\n                                Submit\r\n                            </Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button onClick={() => navigate(\"/Spelers/\" + speler.id)}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditSpeler","C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Team\\Team.tsx",["72"],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Team\\AddSpelerToTeam.tsx",["73","74","75","76","77","78","79","80"],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Team\\AddTeam.tsx",[],"C:\\Users\\Gebruiker\\Desktop\\Graduaat programmeren\\GIP4\\frontend\\src\\Components\\Team\\Teams.tsx",["81"],"import user from \"../Login\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Table} from \"react-bootstrap\";\r\n\r\nconst getTeamsURL = \"http://localhost:8080/api/teams\";\r\n\r\ninterface Team {\r\n    id: number\r\n    naam : string,\r\n    managerDTO : {\r\n        userDTO: {\r\n            username: string,\r\n        }\r\n    },\r\n    actief: boolean,\r\n}\r\n\r\nconst Teams = () => {\r\n\r\n    const [teams, setTeams] = React.useState<Team[]>([]);\r\n\r\n    React.useEffect(() => {\r\n        axios.get<Team[]>(getTeamsURL, {\r\n            withCredentials: true\r\n        }).then((response) =>{\r\n            console.log(response.data);\r\n            setTeams(response.data);\r\n        }).catch((e) => {\r\n            console.log(e);\r\n        });\r\n    }, []);\r\n\r\n    if(!teams) return null;\r\n\r\n    return(\r\n        <>\r\n            <h1>Teams</h1>\r\n            <br/>\r\n            <Link to={\"/AddTeam\"}>Team toevoegen</Link>\r\n            <br/>\r\n            <br/>\r\n            <Table striped bordered hover variant={'dark'}>\r\n                <thead>\r\n                <tr>\r\n                    <th>id</th>\r\n                    <th>naam</th>\r\n                    <th>manager</th>\r\n                    <th>actief</th>\r\n                    <th> </th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {\r\n                    teams.map(team => (\r\n                        <tr key={team.id}>\r\n                            <td>{team.id}</td>\r\n                            <td>{team.naam}</td>\r\n                            <td>{team.managerDTO.userDTO.username}</td>\r\n                            <td>{team.actief ? \"Ja\" : \"Nee\" }</td>\r\n                            <td><Link to={\"/Teams/\" + team.id}>Details</Link></td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n                </tbody>\r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Teams",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":5,"column":8,"nodeType":"88","messageId":"89","endLine":5,"endColumn":14},{"ruleId":"90","severity":1,"message":"91","line":61,"column":8,"nodeType":"92","endLine":61,"endColumn":10,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":29,"column":7,"nodeType":"88","messageId":"96","endLine":29,"endColumn":13},{"ruleId":"90","severity":1,"message":"91","line":61,"column":8,"nodeType":"92","endLine":61,"endColumn":10,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":53,"column":7,"nodeType":"88","messageId":"96","endLine":53,"endColumn":11},{"ruleId":"86","severity":1,"message":"99","line":1,"column":9,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"86","severity":1,"message":"100","line":2,"column":16,"nodeType":"88","messageId":"89","endLine":2,"endColumn":27},{"ruleId":"86","severity":1,"message":"101","line":4,"column":17,"nodeType":"88","messageId":"89","endLine":4,"endColumn":20},{"ruleId":"86","severity":1,"message":"102","line":4,"column":33,"nodeType":"88","messageId":"89","endLine":4,"endColumn":37},{"ruleId":"86","severity":1,"message":"103","line":4,"column":39,"nodeType":"88","messageId":"89","endLine":4,"endColumn":42},{"ruleId":"86","severity":1,"message":"104","line":5,"column":9,"nodeType":"88","messageId":"89","endLine":5,"endColumn":12},{"ruleId":"86","severity":1,"message":"105","line":50,"column":9,"nodeType":"88","messageId":"89","endLine":50,"endColumn":17},{"ruleId":"90","severity":1,"message":"106","line":71,"column":7,"nodeType":"92","endLine":71,"endColumn":9,"suggestions":"107"},{"ruleId":"86","severity":1,"message":"108","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":12},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSpelers'. Either include it or remove the dependency array.","ArrayExpression",["111"],"@typescript-eslint/no-redeclare","'Speler' is already defined.","redeclared",["112"],"'Team' is already defined.","'Link' is defined but never used.","'ChangeEvent' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'map' is defined but never used.","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTeam'. Either include it or remove the dependency array.",["113"],"'user' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"114","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [getSpelers]",{"range":"119","text":"120"},{"range":"121","text":"120"},"Update the dependencies array to be: [getTeam]",{"range":"122","text":"123"},[1474,1476],"[getSpelers]",[1503,1505],[1644,1646],"[getTeam]"]